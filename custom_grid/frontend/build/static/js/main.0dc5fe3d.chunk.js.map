{"version":3,"sources":["Aggrid.tsx","Main.tsx","index.tsx"],"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","g_rowdata","AgGrid","props","defaultColumnDefs","field","headerName","width","filter","pinned","cellRenderer","enableCellChangeFlash","resizable","React","createElement","onClick","clicked","button_name","cellRendererParams","_clicked","_asyncToGenerator","_callee","num","_context","console","log","find","row","client_order_id","qty_available","prompt","axios","get","api_url","params","username","prod","number_shares","alert","t0","concat","_x","apply","arguments","gridRef","useRef","api","_props$refresh_sec","refresh_sec","_props$refresh_cutoff","refresh_cutoff_sec","_props$prod","_useState","useState","_useState2","_slicedToArray","rowData","setRowData","_useState3","_useState4","columnDefs","useEffect","Streamlit","setFrameHeight","fetchAndSetData","_ref","_callee2","array","id_array","old_id_array","toUpdate","toRemove","toAdd","_context2","fetchData","current","map","item","includes","applyTransactionAsync","update","remove","add","_ref2","_callee3","res","_context3","JSON","parse","data","timeout","interval","setInterval","setTimeout","clearInterval","clearTimeout","useCallback","skipHeader","allColumnIds","columnApi","getColumns","column","getId","autoSizeColumns","sizeColumnsToFit","defaultMinWidth","onGridReady","_ref4","_callee6","_context6","_callee5","_context5","_x3","autoGroupColumnDef","useMemo","minWidth","defaultColDef","sortable","getRowId","sideBar","toolPanels","id","labelDefault","labelKey","iconKey","toolPanel","defaultToolPanel","style","display","flexDirection","height","className","AgGridReact","ref","rowStyle","fontSize","padding","headerHeight","rowHeight","animateRows","suppressAggFuncInHeader","withStreamlitConnection","_props$args","args","gridoption_build","_props$args2","Aggrid","ReactDOM","render","StrictMode","Main","document","getElementById"],"mappings":"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","file":"static/js/main.0dc5fe3d.chunk.js","sourcesContent":["import React, { useState, useEffect, useMemo, useRef, useCallback, StrictMode } from 'react';\r\nimport { AgGridReact } from 'ag-grid-react';\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-enterprise';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport axios from \"axios\"\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport {\r\n  ColDef,\r\n  ColGroupDef,\r\n  ColumnResizedEvent,\r\n  GetRowIdFunc,\r\n  GetRowIdParams,\r\n  Grid,\r\n  GridOptions,\r\n  GridReadyEvent,\r\n  SideBarDef,\r\n  ValueParserParams,\r\n} from 'ag-grid-community';\r\n\r\ntype Props = {\r\n  username: string,\r\n  api: string,\r\n  refresh_sec?: number,\r\n  refresh_cutoff_sec?: number,\r\n  gridoption_build?: any,\r\n  prod?: boolean,\r\n  api_url: string,\r\n  button_name: string,\r\n}\r\n\r\n\r\n\r\nconst defaultWidth = 100;\r\n\r\n\r\nlet g_rowdata: any[] = [];\r\n\r\nconst AgGrid = (props: Props) => {\r\n  const BtnCellRenderer = (props: any) => {\r\n    const btnClickedHandler = () => {\r\n      props.clicked(props.value);\r\n    }\r\n  \r\n    return (\r\n      <button onClick={btnClickedHandler}>{button_name}</button>\r\n    )\r\n  }\r\n  const defaultColumnDefs: ColDef[] = [\r\n    {\r\n      field: 'honey',\r\n      headerName: 'honey',\r\n      width: defaultWidth,\r\n      filter: \"agTextColumnFilter\",\r\n      pinned: 'left',\r\n      cellRenderer: 'agAnimateShowChangeCellRenderer',\r\n      enableCellChangeFlash: true,\r\n    },\r\n    {\r\n      field: '$honey',\r\n      headerName: '$honey',\r\n      width: defaultWidth,\r\n      resizable: true,\r\n      cellRenderer: 'agAnimateShowChangeCellRenderer',\r\n      enableCellChangeFlash: true,\r\n    },\r\n    { field: 'symbol', headerName: 'Symbol', width: defaultWidth, resizable: true },\r\n    { field: 'ticker_time_frame', headerName: 'ticker_time_frame', width: defaultWidth, resizable: true },\r\n    { field: 'trigname', headerName: 'trigname', width: defaultWidth, resizable: true },\r\n    { field: 'datetime', headerName: 'datetime', width: defaultWidth, resizable: true },\r\n    { field: 'honey_time_in_profit', headerName: 'honey_time_in_profit', width: defaultWidth, resizable: true },\r\n    { field: 'filled_qty', headerName: 'filled_qty', width: defaultWidth, resizable: true },\r\n    { field: 'qty_available', headerName: 'qty_available', width: defaultWidth, resizable: true },\r\n    { field: 'filled_avg_price', headerName: 'filled_avg_price', width: defaultWidth, resizable: true },\r\n    { field: 'limit_price', headerName: 'limit_price', width: defaultWidth, resizable: true },\r\n    { field: 'cost_basis', headerName: 'cost_basis', width: defaultWidth, resizable: true },\r\n    { field: 'wave_amo', headerName: 'wave_amo', width: defaultWidth, resizable: true },\r\n    { field: 'status_q', headerName: 'status_q', width: defaultWidth, resizable: true },\r\n    { field: 'client_order_id', headerName: 'client_order_id', width: defaultWidth, resizable: true },\r\n    { field: 'origin_wave', headerName: 'origin_wave', width: defaultWidth, resizable: true },\r\n    { field: 'wave_at_creation', headerName: 'wave_at_creation', width: defaultWidth, resizable: true },\r\n    { field: 'sell_reason', headerName: 'sell_reason', width: defaultWidth, resizable: true },\r\n    { field: 'exit_order_link', headerName: 'exit_order_link', width: defaultWidth, resizable: true },\r\n    { field: 'queen_order_state', headerName: 'queen_order_state', width: defaultWidth, resizable: true },\r\n    { field: 'order_rules', headerName: 'order_rules', width: defaultWidth, resizable: true },\r\n    { field: 'order_rules.sellout', headerName: 'order_rules.sellout', width: 150, resizable: true },\r\n    { field: 'order_trig_sell_stop', headerName: 'order_trig_sell_stop', width: defaultWidth, resizable: true },\r\n    { field: 'side', headerName: 'side', width: 70, pinned: 'right', resizable: true },\r\n    {\r\n      field: \"client_order_id\",\r\n      headerName: 'action',\r\n      width: 80,\r\n      cellRenderer: BtnCellRenderer,\r\n      cellRendererParams: {\r\n        clicked: async function (field: any) {\r\n          try {\r\n            console.log('g_rowdata.find((row) => row.client_order_id == field).qty_available :>> ', g_rowdata.find((row) => row.client_order_id == field).qty_available);\r\n            const num = prompt(`Please input number`, g_rowdata.find((row) => row.client_order_id == field).qty_available);\r\n            console.log(\"prompt\",num);\r\n            if(num == null) return;\r\n            const res = await axios.get(api_url, {\r\n              params: {\r\n                username: username,\r\n                prod: prod,\r\n                client_order_id: field,\r\n                number_shares: num,\r\n              }\r\n            })\r\n            alert(\"Success Sellorder_request!\");\r\n          } catch (error) {\r\n            alert(`${error}`);\r\n          }\r\n        },\r\n      },\r\n      pinned: 'right',\r\n    }\r\n  ];\r\n  const gridRef = useRef<AgGridReact>(null);\r\n  const { username, api, refresh_sec = 1, refresh_cutoff_sec = 0, prod = true, api_url, button_name } = props;\r\n  const [rowData, setRowData] = useState<any[]>([]);\r\n  const [columnDefs, setColumnDefs] = useState<(ColDef | ColGroupDef)[]>(defaultColumnDefs)\r\n  useEffect(() => Streamlit.setFrameHeight());\r\n\r\n  \r\n  const addIds = (array: any[]) => {\r\n    return array.map((item, idx) => {\r\n      return { ...item, idx }\r\n    })\r\n  }\r\n\r\n  const fetchAndSetData = async () => {\r\n    const array = await fetchData();\r\n    const api = gridRef.current!.api;\r\n    console.log(g_rowdata);\r\n    const id_array = array.map((item: any) => item.client_order_id)\r\n    const old_id_array = g_rowdata.map((item: any) => item.client_order_id)\r\n    const toUpdate = g_rowdata.filter((row: any) => id_array.includes(row.client_order_id))\r\n    const toRemove = g_rowdata.filter((row) => !id_array.includes(row.client_order_id))\r\n    const toAdd = array.filter((row: any) => !old_id_array.includes(row.client_order_id))\r\n    console.log(toRemove);\r\n    api.applyTransactionAsync({ update: toUpdate, remove: toRemove, add: toAdd });\r\n    g_rowdata = array\r\n  };\r\n\r\n  const fetchData = async () => {\r\n    const res = await axios.get(api, {\r\n      params: {\r\n        username: username,\r\n        prod: prod,\r\n      }\r\n    });\r\n    const array = JSON.parse(res.data);\r\n    return array;\r\n  };\r\n\r\n  const postRowId = async (id: any) => {\r\n    const res = await axios.post(api, {\r\n      username: username,\r\n      prod: prod,\r\n      id: id,\r\n    });\r\n    return res;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(fetchAndSetData, refresh_sec * 1000);\r\n    let timeout: NodeJS.Timeout;\r\n    if (refresh_cutoff_sec > 0) {\r\n      console.log(refresh_cutoff_sec);\r\n      timeout = setTimeout(() => {\r\n        clearInterval(interval);\r\n        console.log(\"Fetching data ended, refresh rate:\", refresh_sec);\r\n      }, refresh_cutoff_sec * 1000);\r\n    }\r\n    console.error(\"rendered==========\", props);\r\n    return () => {\r\n      clearInterval(interval);\r\n      if (timeout) clearTimeout(timeout);\r\n    }\r\n  }, [props]);\r\n\r\n  const autoSizeAll = useCallback((skipHeader: boolean) => {\r\n    const allColumnIds: string[] = [];\r\n    gridRef.current!.columnApi.getColumns()!.forEach((column: any) => {\r\n      allColumnIds.push(column.getId());\r\n    });\r\n    gridRef.current!.columnApi.autoSizeColumns(allColumnIds, skipHeader);\r\n  }, []);\r\n\r\n  const sizeToFit = useCallback(() => {\r\n    gridRef.current!.api.sizeColumnsToFit({\r\n      defaultMinWidth: 100,\r\n    });\r\n  }, []);\r\n\r\n  const onGridReady = useCallback(async (params: GridReadyEvent) => {\r\n    setTimeout(async () => {\r\n      const array = await fetchData();\r\n      setRowData(array);\r\n      g_rowdata = array;\r\n    }, 100);\r\n  }, []);\r\n\r\n  const autoGroupColumnDef = useMemo<ColDef>(() => {\r\n    return {\r\n      minWidth: 200,\r\n    };\r\n  }, []);\r\n\r\n  const defaultColDef = useMemo<ColDef>(() => {\r\n    return {\r\n      width: 120,\r\n      sortable: true,\r\n      resizable: true,\r\n      filter: true,\r\n    };\r\n  }, []);\r\n\r\n  const getRowId = useMemo<GetRowIdFunc>(() => {\r\n    return (params: GetRowIdParams) => {\r\n      return params.data.client_order_id;\r\n    };\r\n  }, []);\r\n\r\n  const sideBar = useMemo<\r\n    SideBarDef | string | string[] | boolean | null\r\n  >(() => {\r\n    return {\r\n      toolPanels: [\r\n        {\r\n          id: 'columns',\r\n          labelDefault: 'Columns',\r\n          labelKey: 'columns',\r\n          iconKey: 'columns',\r\n          toolPanel: 'agColumnsToolPanel',\r\n        },\r\n        {\r\n          id: 'filters',\r\n          labelDefault: 'Filters',\r\n          labelKey: 'filters',\r\n          iconKey: 'filter',\r\n          toolPanel: 'agFiltersToolPanel',\r\n        },\r\n      ],\r\n      defaultToolPanel: 'customStats',\r\n    };\r\n  }, []);\r\n  return (\r\n    <div style={{ display: 'flex', flexDirection: 'row', height: '300px', width: \"100\" }}>\r\n      <div className=\"ag-theme-alpine-dark\" style={{ width: \"100%\", height: \"100%\" }}>\r\n        <AgGridReact\r\n          ref={gridRef}\r\n          rowData={rowData}\r\n          columnDefs={columnDefs}\r\n          defaultColDef={defaultColDef}\r\n          rowStyle={{ fontSize: 12, padding: 0 }}\r\n          headerHeight={30}\r\n          rowHeight={30}\r\n          onGridReady={onGridReady}\r\n          autoGroupColumnDef={autoGroupColumnDef}\r\n          sideBar={sideBar}\r\n          animateRows={true}\r\n          suppressAggFuncInHeader={true}\r\n          getRowId={getRowId}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AgGrid;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\";\r\nimport 'ag-grid-community/styles/ag-grid.css';\r\nimport 'ag-grid-community/styles/ag-theme-alpine.css';\r\nimport Aggrid from \"./Aggrid\";\r\n\r\nconst Main = (props: ComponentProps) => {\r\n\r\n  const { username, api, refresh_sec, refresh_cutoff_sec, gridoption_build, prod } = props.args;\r\n  const { api_url, button_name } = props.args;\r\n  console.log(props);\r\n  return (\r\n    <div >\r\n      <Aggrid\r\n        username={username}\r\n        api={api}\r\n        refresh_sec={refresh_sec}\r\n        refresh_cutoff_sec={refresh_cutoff_sec}\r\n        gridoption_build={gridoption_build}\r\n        prod={prod}\r\n        api_url={api_url}\r\n        button_name={button_name}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withStreamlitConnection(Main);\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Main from \"./Main\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Main />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}