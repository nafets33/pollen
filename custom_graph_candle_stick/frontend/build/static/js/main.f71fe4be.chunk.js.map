{"version":3,"sources":["CandleStick.jsx","Main.tsx","index.tsx"],"names":["CandlestickChart","props","api","api_key","symbols","prod","key","height","width","kwargs","symbol","setSymbol","useState","interval","setInterval","useEffect","console","log","fetchChartData","async","body","ttf","data","axios","post","jsonData","JSON","parse","Date","getFullYear","document","getElementById","innerHTML","createChart","addCandlestickSeries","setData","renderChart","error","React","createElement","htmlFor","id","value","onChange","event","target","map","s","withStreamlitConnection","args","Streamlit","setFrameHeight","Fragment","ReactDOM","render","StrictMode","Main"],"mappings":"uOAuFeA,MAnFWC,IAExB,MAAM,IACJC,EAAG,QACHC,EAAO,QACPC,EAAO,KACPC,EAAI,IACJC,EAAG,OACHC,EAAS,IAAG,MACZC,EAAQ,KACNP,EAAMQ,QACHC,EAAQC,GAAaC,mBAASR,EAAQ,KACtCS,EAAUC,GAAeF,mBAAS,MAEzCG,oBAAU,KACRC,QAAQC,IAAI,OAAOhB,GAEnBiB,KACC,CAACR,EAAQG,IAEZ,MAYMK,EAAiBC,UACrB,IACE,MAAMC,EAAO,CACXjB,QAASA,EACTC,QAASM,EACTW,IAAKR,GAEPG,QAAQC,IAAIG,GACZ,MAAM,KAAEE,SAAeC,IAAMC,KAAKtB,EAAKkB,GACjCK,EAAWC,KAAKC,MAAML,GAC5BN,QAAQC,IAAIQ,EAAU,IAAIG,KAAK,YAAeC,eAtB7BP,KACnBQ,SAASC,eAAe,SAASC,UAAY,GAC/BC,YAAYH,SAASC,eAAe,SAAU,CAC1DvB,MAAOA,EACPD,OAAQA,IAGiB2B,uBAEdC,QAAQb,IAcnBc,CAAYX,GACZ,MAAOY,GACPrB,QAAQqB,MAAM,6BAA8BA,KAYhD,OACEC,IAAAC,cAAA,WACED,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOC,QAAQ,UAAS,WACxBF,IAAAC,cAAA,UAAQE,GAAG,SAASC,MAAOhC,EAAQiC,SAZbC,IAC1BjC,EAAUiC,EAAMC,OAAOH,SAYT,OAAPtC,QAAO,IAAPA,OAAO,EAAPA,EAAS0C,IAAKC,GACbT,IAAAC,cAAA,UAAQjC,IAAKyC,EAAGL,MAAOK,GACpBA,MAKTT,IAAAC,cAAA,WACED,IAAAC,cAAA,SAAOC,QAAQ,YAAW,aAC1BF,IAAAC,cAAA,UAAQE,GAAG,WAAWC,MAAO7B,EAAU8B,SAlBfC,IAC5B9B,EAAY8B,EAAMC,OAAOH,SAkBnBJ,IAAAC,cAAA,UAAQG,MAAM,MAAK,MACnBJ,IAAAC,cAAA,UAAQG,MAAM,MAAK,MACnBJ,IAAAC,cAAA,UAAQG,MAAM,MAAK,QAIvBJ,IAAAC,cAAA,OAAKE,GAAG,YChECO,kBAVD/C,IACZ,MAAM,IAAEC,EAAG,OAAEO,GAAWR,EAAMgD,KAE9B,OADAlC,oBAAU,IAAMmC,IAAUC,kBAExBb,IAAAC,cAAAD,IAAAc,SAAA,KACEd,IAAAC,cAACvC,EAAgB,CAACS,OAAQA,OCThC4C,IAASC,OACPhB,IAAAC,cAACD,IAAMiB,WAAU,KACfjB,IAAAC,cAACiB,EAAI,OAEP1B,SAASC,eAAe,W","file":"static/js/main.f71fe4be.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { createChart } from 'lightweight-charts';\nimport axios from 'axios'; // Import axios for making HTTP requests\n\nconst CandlestickChart = (props) => {\n//   const { kwargs = {} } = props.args;\n  const {\n    api,\n    api_key,\n    symbols, // Default symbols\n    prod,\n    key,\n    height = 400,\n    width = 800,\n  } = props.kwargs;\n  const [symbol, setSymbol] = useState(symbols[0]); // Default symbol\n  const [interval, setInterval] = useState('1D'); // Default interval\n\n  useEffect(() => {\n    console.log(\"apis\",props)\n\n    fetchChartData();\n  }, [symbol, interval]);\n\n  const renderChart = (data) => {\n    document.getElementById('chart').innerHTML = \"\";\n    const chart = createChart(document.getElementById('chart'), {\n      width: width,\n      height: height,\n    });\n\n    const candleSeries = chart.addCandlestickSeries();\n\n    candleSeries.setData(data);\n  };\n\n  const fetchChartData = async () => {\n    try {\n      const body = {\n        api_key: api_key,\n        symbols: symbol,\n        ttf: interval,\n      };\n      console.log(body)\n      const { data } = await axios.post(api, body);\n      const jsonData = JSON.parse(data)\n      console.log(jsonData, new Date(1711632600000).getFullYear())\n      renderChart(jsonData);\n    } catch (error) {\n      console.error('Error fetching chart data:', error);\n    }\n  };\n\n  const handleSymbolChange = (event) => {\n    setSymbol(event.target.value);\n  };\n\n  const handleIntervalChange = (event) => {\n    setInterval(event.target.value);\n  };\n\n  return (\n    <div>\n      <div>\n        <label htmlFor=\"symbol\">Symbol:</label>\n        <select id=\"symbol\" value={symbol} onChange={handleSymbolChange}>\n          {symbols?.map((s) => (\n            <option key={s} value={s}>\n              {s}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div>\n        <label htmlFor=\"interval\">Interval:</label>\n        <select id=\"interval\" value={interval} onChange={handleIntervalChange}>\n          <option value=\"1D\">1D</option>\n          <option value=\"1W\">1W</option>\n          <option value=\"1M\">1M</option>\n          {/* Add more intervals as needed */}\n        </select>\n      </div>\n      <div id=\"chart\"></div>\n    </div>\n  );\n};\n\nexport default CandlestickChart;","import React, { useEffect, useState } from \"react\"\r\nimport {\r\n  ComponentProps,\r\n  Streamlit,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport CandlestickChart from \"./CandleStick.jsx\"\r\n\r\nconst Main = (props: ComponentProps) => {\r\n  const { api, kwargs } = props.args\r\n  useEffect(() => Streamlit.setFrameHeight())\r\n  return (\r\n    <>\r\n      <CandlestickChart kwargs={kwargs} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withStreamlitConnection(Main)\r\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Main from \"./Main\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Main />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}